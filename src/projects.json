[
    {
        "title": "With Go - 사용자 웹",
        "date": "2025.02 ~ 2025.03",
        "link": "https://cjo3o.github.io/with_go/",
        "introduce": "With Go는 여행 중 짐을 안전하게 보관하거나 배송할 수 있는 짐 보관 및 배송 예약 서비스 플랫폼입니다.",
        "function": [
            "여행 짐 보관 및 배송 예약 기능 제공",
            "제휴 숙소 및 보관 장소 조회 및 정보 확인",
            "직관적인 사용자 인터페이스와 예약 흐름 구성"
        ],
        "part": [
            "사이트 공통 레이아웃 : 헤더와 푸터 UI 구현",
            "짐 배송 예약 시스템 : 사용자 입력 처리, 예약 정보 저장 로직 개발",
            "제휴 숙소 및 보관 장소 리스트 페이지 : 리스트 조회 및 UI 구성",
            "로그인 기능 : supabase의 Oauth를 활용한 카카오 로그인 기능 구현"
        ],
        "feeling": [
            "사용자 중심 개발의 중요성을 실감하며, 기능 구현 시 사용자 편의성과 직관적인 흐름을 우선 고려해야 한다는 것을 경험",
            "github를 통한 협업의 효율성과 중요성을 체험했고, 팀원 간의 적극적인 소통과 의견 조율이 프로젝트 완성도에 큰 영향을 준다는 것을 경험"
        ],
        "skills": [
            "HTML",
            "CSS",
            "JS",
            "supabase"
        ],
        "trouble_shooting": {
            "trouble": [
                "네비게이션 드롭다운 전환효과가 올라갈 때 글자가 컨테이너 높이에 같이 줄어들지 않음",
                "헤더 위치를 고정하기 위해 position: fixed를 줌 > 아래에 오는 요소가 가려짐",
                "헤더와 푸터는 공통된 부분인데 따로 빼서 사용할 페이지에 불러 올 순 없을까?"
            ],
            "shooting": [
                "컨테이너에 overflow:hidden 줘서 컨테이너의 높이가 작아지면 벗어나는 글자를 보이지 않게 해서 해결",
                "아래에 오는 요소에 margin-top, 헤더에는 top:0을 줘서 해결",
                "헤더와 푸터를 컴포넌트로 분리시킨 뒤 fetch함수를 이용해 불러옴"
            ]
        }
    },
    {
        "title": "With Go - 관리자 웹",
        "date": "2025.04 ~ 2025.05",
        "link": "https://with-go-admin.vercel.app/login",
        "introduce": "With Go 관리자 페이지는 관리자가 효율적으로 서비스를 운영할 수 있도록 별도로 제작하였습니다.",
        "function": [
            "신규 예약 등록 & 예약 조회 기능 제공",
            "제휴 숙소 및 보관 장소 등록 기능 제공",
            "직원 관리 및 권한 부여 기능 제공",
            "회원 목록 및 기사 목록 조회 기능 제공",
            "이벤트, 공지사항 등 각종 부가기능 등록 기능 제공",
            "1 대 1 문의 답변 기능 제공"
        ],
        "part": [
            "사이트 공통 레이아웃 : 사이드바 UI 구현 (권한에 따라 다른 메뉴 가시 및 기능제한)",
            "로그인 기능 : supabase를 활용한 로그인 기능 구현",
            "직원목록 : 직원 등록, 조회 및 수정, 권한 부여 기능 구현"
        ],
        "feeling": [
            "사용자 중심 개발의 중요성을 실감하며, 기능 구현 시 사용자 편의성과 직관적인 흐름을 우선 고려해야 한다는 것을 경험",
            "github를 통한 협업의 효율성과 중요성을 체험했고, 팀원 간의 적극적인 소통과 의견 조율이 프로젝트 완성도에 큰 영향을 준다는 것을 경험",
            "supabase를 활용한 로그인 기능이나 권한에 따라 UI를 동적으로 구성하는 부분 등에서 처음 접하는 기술을 빠르게 익히고 적용하는 과정이 인상 깊었음"
        ],
        "skills": [
            "HTML",
            "CSS",
            "JS",
            "React",
            "supabase"
        ],
        "trouble_shooting": {
            "trouble": [
                "직원관리 페이지에서 직원테이블의 데이터를 불러와서 테이블의 각 행에 뿌려주는 부분에서 행을 클릭했을 때 상세정보를 볼 수 있는 모달창이 열리도록 구현했는데, 메모, 수정, 삭제 버튼도 행에 포함되어서 두개의 창이 같이 열리는 상황이 발생했다."
            ],
            "shooting": [
                "부모 요소의 onClick 이벤트도 같이 실행되는 '이벤트 버블링' 때문이다. 자식요소의 onClick 이벤트에 e.stopPropagation()을 주면 부모요소의 함수실행을 막을 수 있다."
            ]
        }
    },
    {
        "title": "먼망진창 - 실시간 대기정보 제공 서비스",
        "date": "2025.05 ~ 2025.06",
        "link": "https://meonmang.vercel.app/",
        "introduce": "먼망진창은 대기오염 정보를 사용자에게 실시간으로 제공하고, 위험 수준에 따라 알림을 제공하는 서비스입니다.",
        "function": [
            "실시간 대기질 정보 제공 (미세먼지, 초미세먼지, 오존 등)",
            "사용자 위치 기반 알림 제공 (위험 단계 시 알림)",
            "PWA 지원으로 앱처럼 설치 가능",
            "반응형 디자인 적용으로 모바일/PC 모두 최적화"
        ],
        "part": [
            "카카오맵 대기정보 : 카카오맵 api를 활용해 각 행정구역을 표시, 실시간 대기정보 or 오늘/내일의 평균 대기정보 확인 기능 구현",
            "행정구역별 시군구 상세정보 : 행정구역 선택 시 모달창을 구현하여 선택한 시군구의 상세 대기정보를 확인 가능하도록 구현",
            "즐겨찾기 : 선택한 시군구를 즐겨찾기에 등록이 가능하도록 구현"
        ],
        "feeling": [
            "시간이 제한적이어서 여러가지 기능을 선택하기 보다 적은 기능을 완성도를 높이는게 더 나은 방향일수도 있다고 느낌",
            "공공 api를 사용하다 보니 데이터를 원하는대로 만질 수 없어서 원하는 데이터를 호출하는 과정에서 불편함을 느낌"
        ],
        "skills": [
            "HTML",
            "CSS",
            "JS",
            "React",
            "supabase",
            "공공데이터 api",
            "카카오맵 api"
        ]
    },
    {
        "title": "With Go - 기사 앱",
        "date": "2025.06 ~ 2025.07",
        "link": "https://port-0-driverapp-manacntt27a3e0c2.sel4.cloudtype.app",
        "introduce": "With Go 기사앱은 사용자, 관리자, 기사 앱 간의 상호작용을 기반으로 한 배송 관리 시스템 중, 기사 전용 앱입니다.",
        "function": [
            "새로운 배송목록 확인 기능",
            "배송 상태에 따른 My List 목록 구분",
            "PWA 지원으로 앱처럼 설치 가능",
            "사용자와 기사가 상호작용하여 배송 상태 업데이트 시 사용자에게 알림 제공",
            "정산내역 확인 기능"
        ],
        "part": [
            "UI/UX 설계 및 구현 : 기사 입장에서 보기 편하고 빠르게 조작할 수 있는 구조로 화면 구성, 작업 내역 확인 및 배송 상태 변경 기능 구현",
            "새로운 주문 확인 기능 : 사용자가 배송 예약 시 기사앱의 order탭에 새로운 예약이 등록",
            "My List : 기사가 원하는 예약을 선택 시 배송 상태에 맞는 목록에 추가 되도록 구현, 배송 완료 시 사진 첨부 기능"
        ],
        "feeling": [
            "사용자와 기사가 서로 상호작용하는 구조를 직접 고민하고 구현하는 과정에서, 시스템 전체가 어떻게 연결 되어 작동하는지에 대한 흐름을 이해함",
            "기사 환경에 적합한 UI/UX를 어떻게 구성할지 고민함",
            "프론트엔드와 백엔드 간 통신을 직접 구현하고 확인해보며, 클라이언트와 서버구조에 대한 이해를 키울 수 있었음"
        ],
        "skills": [
            "HTML",
            "CSS",
            "JS",
            "TailWind CSS",
            "nunjucks",
            "Node",
            "express",
            "supabase"
        ]
    },
    {
        "title": "포트폴리오 사이트",
        "date": "2025.07 ~ 진행중",
        "link": "https://cjy-portfolio.vercel.app/",
        "introduce": "나만의 포트폴리오 사이트를 만들기 위해 제작 되었습니다.",
        "function": [
            "자기소개",
            "기술스택",
            "프로젝트",
            "교육",
            "반응형으로 제작"
        ],
        "part": [
            "UI/UX 설계 및 구현 : 심플하게 black & white로 전체적인 디자인 구성",
            "반응형 작업 : 모바일과 PC 모두 볼 수 있도록 반응형으로 제작",
            "프로젝트 상세정보 : 프로젝트 '자세히 보기' 버튼 클릭 시 프로젝트에 대한 상세 정보를 볼 수 있도록 모달창 구현"
        ],
        "feeling": [
            "기획부터 디자인, 구현까지 혼자 작업을 진행하여서 힘들었음",
            "무채색인 black & white를 사용하면 너무 어두울 수 있다고 생각했지만 생각보다 깔끔했음",
            "데이터베이스와 백엔드를 사용하지 않아 구현하는데 큰 어려움은 없었음"
        ],
        "skills": [
            "HTML",
            "CSS",
            "JS",
            "React",
            "TailWind CSS"
        ]
    }
]